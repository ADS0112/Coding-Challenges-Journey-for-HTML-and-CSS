/* Global reset with margin and padding set to 0. Since these can be overwritten very easily we can apply our own padding and margin to each element later. This removes the default padding that comes with the page */
* {
  margin: 0;
  padding: 0;
}

/* PAGE SECTIONS */
body {
  font-family: sans-serif;
  color: #444;
  border-top: 10px solid #255eb4;
}
/* Adds a width to the all the elements with a container, then uses margin left and right auto to center the items. The margin changes as the page shrinks and grows */
.container {
  width: 800px;
  margin: 0 auto;
}
/* All other style elements inherit the properties of body until those specific elements styled */
nav {
  font-size: 18px;
}

article {
  margin-bottom: 60px;
}
.main-header {
  background-color: #f7f7f7;
  padding: 20px 40px;
  margin-bottom: 60px;
  height: 80px;
}
.article-header {
  margin-bottom: 40px;
}

aside {
  background-color: #f7f7f7;
  border-top: 5px solid #255eb4;
  border-bottom: 5px solid #255eb4;
  padding: 50px 0;
  width: 500px;
}
/* SMALLER ELEMENTS */
h1,
h2,
h3 {
  color: #255eb4;
}

h1 {
  font-size: 20px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}

ul,
ol {
  padding-left: 40px;
  margin-bottom: 20px;
}
li {
  font-size: 20px;
  margin-bottom: 10px;
}

p {
  font-size: 22px;
  line-height: 1.5;
  margin-bottom: 15px;
}

/* Typcially bad pracitce to style elements in accordanace with HTML structure. If we chnage HTML, the styles will change, so use classes */
/* footer p {
  font-size: 16px;
} */
/* article header p {
  font-style: italic;
} */

/* using ID selector - ID's cannot be repeated anyhwere else, only one id per element - dont use ID's, use classes*/
.author {
  font-style: italic;
}

.copyright {
  font-size: 16px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

.related-list {
  list-style: none;
}
a:link {
  color: #255eb4;
  text-decoration: none;
}
a:visited {
  color: #255eb4;
}

a:hover {
  color: lightcoral;
  text-decoration: underline;
}
a:active {
  background-color: lightgray;
}
/* Using % for width ensures that the size of the image stays the same as you expand or contract the page because it is always the size of the parent container This is useful for building responsive websites*/
.coding-img {
  width: 100%;
  height: auto;
}

/* Adding a pseudo-class. It will select all li elements that are the first child of its parent elements. So we dont have to add a class to each first element */
li:first-child {
  font-weight: bold;
}
li:last-child {
  font-style: italic;
  margin-bottom: 0;
}
/* Can use nth-child to select specific child. Can even use specific key words such as odd, it will seleect all odd elements*/
li:nth-child(2) {
  /* color: red; */
}
/* Inherited properites have the lowest priority */
